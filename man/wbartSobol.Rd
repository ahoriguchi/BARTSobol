% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wbartSobol_mc1.R
\name{wbartSobol}
\alias{wbartSobol}
\title{Get Sobol' sensitivity indices from BART.}
\usage{
wbartSobol(wb_obj, p, n_tree, nd_post)
}
\arguments{
\item{wb_obj}{BART::wbart() object.}

\item{p}{input dimension.}

\item{n_tree}{number of trees per ensemble.}

\item{nd_post}{number of posterior samples (i.e. number of ensembles).}
}
\value{
\code{list(Si, Sij, TSi)}.
\item{Si}{
Main-effects Sobol' indices (normalized).
A matrix with p rows and (ndpost + 1) columns.
Each row corresponds to one of the p$variables.
The first column contains the variable indices.
Each remaining column corresponds to the p main-effects Sobol' indices of the posterior draw of the BART ensemble.
The (i, j+1) value is S_i for the jth kept draw of the ensemble.
}
\item{Sij}{Two-way Sobol' indices (normalized). A data frame with p rows and (ndpost + 2) columns. Each row corresponds to a pair of the p$variables. The first two columns contain the variable indices. Each remaining column corresponds to the two-way Sobol' indices of the posterior draw of the BART ensemble.}
\item{TSi}{Total-effects Sobol' indices (normalized). Otherwise, same as Si.}
}
\description{
Compute main-effects, two-way, and total-effects Sobol' indices for BART::wbart() object.
For each VA measure, capture all across ndpost ensembles.
Prior to calling wbartSobol(), x_train from wb_obj should have been scaled to unit hypercube.
}
\examples{
p <- 5L
n_obs <- 100L
n_tree <- 20L
nd_post <- 100L

# Create training data
x_train <- sapply(1:p, function(i) rnorm(n_obs))
ScaleToUnitHypercube <- function(x) (x - min(x)) / (max(x) - min(x))
x_train <- apply(x_train, 2, ScaleToUnitHypercube)
DataGenFun <- function(x) (x[1] - 0.5) * (x[2] - 0.5) + (x[3] - 0.5)^2
y_train <- apply(x_train, 1, DataGenFun) + rnorm(n_obs)

# Train BART model; call wbartSobol()
wb_obj <- BART::wbart(x_train, y_train, ntree = n_tree, ndpost = nd_post)
wbartSobol(wb_obj, p, n_tree, nd_post)
}
